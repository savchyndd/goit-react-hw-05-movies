{"version":3,"file":"static/js/744.5c89dc4c.chunk.js","mappings":"wRAEaA,EAAcC,EAAAA,EAAAA,MAAH,qQAkBXC,EAAeD,EAAAA,EAAAA,OAAH,2RAmBZE,EAAYF,EAAAA,EAAAA,GAAH,6CAGTG,EAAYH,EAAAA,EAAAA,GAAH,iU,SCyBtB,EAzDe,WACb,OAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MA0BjB,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAeL,EAAaM,IAAI,SACtC,GAAKD,EAAL,CAEA,IAAME,EAAiB,mCAAG,8GAEKC,EAAAA,EAAAA,IAAgBH,GAFrB,OAEhBI,EAFgB,OAGtBX,EAAUW,GAHY,gDAKtBC,QAAQC,IAAR,MALsB,yDAAH,qDAQvBJ,GAVyB,CAW1B,GAAE,CAACP,KAGF,iCACE,kBAAMY,SA1BW,SAAAC,GACnBA,EAAEC,iBACFb,EAAgB,CAAEN,MAAAA,GACnB,EAuBG,WACE,SAACN,EAAD,CACE0B,KAAK,OACLC,YAAY,aACZC,WAAS,EACTC,MAAOvB,EACPwB,SA3BmB,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MACtCtB,EAASsB,EACV,KA2BK,SAAC3B,EAAD,CAAcwB,KAAK,SAAnB,uBAEDlB,EAAOwB,OAAS,IACf,SAAC7B,EAAD,UACGK,EAAOyB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,SAAC/B,EAAD,WACE,SAAC,KAAD,CAAMgC,MAAO,CAAEC,KAAMxB,GAAYyB,GAAE,kBAAaJ,GAAhD,SACGC,KAFWD,EADN,QAWrB,C,+LC/DDK,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,uBACvBE,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAMjBxB,EAAe,mCAAG,WAAMb,GAAN,yFACNiC,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBlC,EADpB,+CADM,uBACrBoC,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDAQfC,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAAAA,EAAAA,IAAA,gBACZM,EADY,oBACOL,EADP,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZI,EAAY,mCAAG,WAAMD,GAAN,yFACHN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACeL,EADf,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,EAAKK,MALc,2CAAH,sDAOZC,EAAe,mCAAG,WAAMH,GAAN,yFACNN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACeL,EADf,oBADM,uBACrBE,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,qD","sources":["pages/Movies/Movies.module.jsx","pages/Movies/Movies.jsx","services/getMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const InputSearch = styled.input`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n\n  padding: 15px 16px;\n\n  color: rgba(255, 255, 255, 0.2);\n\n  background: #2b2b2b;\n  border-radius: 10px;\n\n  :active,\n  :focus,\n  :hover {\n    color: white;\n  }\n`;\nexport const ButtonSearch = styled.button`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n\n  margin-left: 12px;\n  padding: 15px 16px;\n\n  color: rgba(255, 255, 255, 0.2);\n\n  background: #2b2b2b;\n  border-radius: 10px;\n\n  :active,\n  :focus,\n  :hover {\n    color: white;\n  }\n`;\nexport const FilmsList = styled.ul`\n  margin-top: 12px;\n`;\nexport const FilmsItem = styled.li`\n  font-weight: 400;\n  font-size: 14px;\n\n  background-color: #2a2a2a;\n  border-radius: 14px;\n\n  :not(:last-child) {\n    margin-bottom: 6px;\n  }\n\n  a:hover,\n  a:focus {\n    background-color: #ffc700;\n    color: #111111;\n  }\n\n  a {\n    display: block;\n    padding: 16px 16px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from 'services/getMovies';\nimport {\n  FilmsItem,\n  FilmsList,\n  InputSearch,\n  ButtonSearch,\n} from './Movies.module';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query });\n  };\n\n  const handleSearchParams = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  useEffect(() => {\n    const currentQuery = searchParams.get('query');\n    if (!currentQuery) return;\n\n    const fetchMovieByQuery = async () => {\n      try {\n        const movieByQuery = await getMovieByQuery(currentQuery);\n        setMovies(movieByQuery);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchMovieByQuery();\n  }, [searchParams]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <InputSearch\n          type=\"text\"\n          placeholder=\"Name movie\"\n          autoFocus\n          value={query}\n          onChange={handleSearchParams}\n        />\n        <ButtonSearch type=\"submit\">Search</ButtonSearch>\n      </form>\n      {movies.length > 0 && (\n        <FilmsList>\n          {movies.map(({ id, original_title }) => (\n            <FilmsItem key={id}>\n              <Link state={{ from: location }} to={`/movies/${id}`}>\n                {original_title}\n              </Link>\n            </FilmsItem>\n          ))}\n        </FilmsList>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3373af60a4ee1fe7510a1a61c11380e1';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n"],"names":["InputSearch","styled","ButtonSearch","FilmsList","FilmsItem","useState","query","setQuery","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","currentQuery","get","fetchMovieByQuery","getMovieByQuery","movieByQuery","console","log","onSubmit","e","preventDefault","type","placeholder","autoFocus","value","onChange","target","length","map","id","original_title","state","from","to","axios","API_KEY","getTrendingMovies","data","results","getMovieById","movieId","getCastMovie","cast","getReviewsMovie"],"sourceRoot":""}