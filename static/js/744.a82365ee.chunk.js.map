{"version":3,"file":"static/js/744.a82365ee.chunk.js","mappings":"2PAEaA,EAAcC,EAAAA,EAAAA,MAAH,qQAkBXC,EAAYD,EAAAA,EAAAA,GAAH,6CAGTE,EAAYF,EAAAA,EAAAA,GAAH,iU,SCctB,EAhCe,WACb,OAA0BG,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAQjB,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBP,GAAOQ,KAAKL,EAC7B,GAAE,CAACH,KAGF,iCACE,SAACL,EAAD,CACEc,KAAK,OACLC,YAAY,SACZC,MAAOX,EACPY,SAbqB,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MACtCV,EAASU,EACV,KAaG,SAACd,EAAD,UACGK,EAAOY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,SAAClB,EAAD,WACE,SAAC,KAAD,CAAMmB,MAAO,CAAEC,KAAMd,GAAYe,GAAE,kBAAaJ,GAAhD,SACGC,KAFWD,EADN,QAUnB,C,+LCjCDK,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,uBACvBE,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAMjBjB,EAAe,mCAAG,WAAMP,GAAN,yFACNoB,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBrB,EADpB,+CADM,uBACrBuB,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDAQfC,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAAAA,EAAAA,IAAA,gBACZM,EADY,oBACOL,EADP,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZI,EAAY,mCAAG,WAAMD,GAAN,yFACHN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACeL,EADf,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAOZK,EAAe,mCAAG,WAAMF,GAAN,yFACNN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACeL,EADf,oBADM,uBACrBE,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,qD","sources":["pages/Movies/Movies.module.jsx","pages/Movies/Movies.jsx","services/getMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const InputSearch = styled.input`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n\n  padding: 15px 16px;\n\n  color: rgba(255, 255, 255, 0.2);\n\n  background: #2b2b2b;\n  border-radius: 10px;\n\n  :active,\n  :focus,\n  :hover {\n    color: white;\n  }\n`;\nexport const FilmsList = styled.ul`\n  margin-top: 12px;\n`;\nexport const FilmsItem = styled.li`\n  font-weight: 400;\n  font-size: 14px;\n\n  background-color: #2a2a2a;\n  border-radius: 14px;\n\n  :not(:last-child) {\n    margin-bottom: 6px;\n  }\n\n  a:hover,\n  a:focus {\n    background-color: #ffc700;\n    color: #111111;\n  }\n\n  a {\n    display: block;\n    padding: 16px 16px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getMovieByQuery } from 'services/getMovies';\nimport { FilmsItem, FilmsList, InputSearch } from './Movies.module';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const handleSearchParams = ({ target: { value } }) => {\n    setQuery(value);\n  };\n  useEffect(() => {\n    getMovieByQuery(query).then(setMovies);\n  }, [query]);\n\n  return (\n    <>\n      <InputSearch\n        type=\"text\"\n        placeholder=\"Search\"\n        value={query}\n        onChange={handleSearchParams}\n      />\n      <FilmsList>\n        {movies.map(({ id, original_title }) => (\n          <FilmsItem key={id}>\n            <Link state={{ from: location }} to={`/movies/${id}`}>\n              {original_title}\n            </Link>\n          </FilmsItem>\n        ))}\n      </FilmsList>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3373af60a4ee1fe7510a1a61c11380e1';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n"],"names":["InputSearch","styled","FilmsList","FilmsItem","useState","query","setQuery","movies","setMovies","location","useLocation","useEffect","getMovieByQuery","then","type","placeholder","value","onChange","target","map","id","original_title","state","from","to","axios","API_KEY","getTrendingMovies","data","results","getMovieById","movieId","getCastMovie","getReviewsMovie"],"sourceRoot":""}