{"version":3,"file":"static/js/247.7e881032.chunk.js","mappings":"uMAkCA,UA7Ba,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAQI,EAAKL,KAAjB,GAChC,GAAE,CAACH,KAGF,+BAEI,wBACGG,EAAKM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,UAApC,OACR,2BACE,gBACEC,IAAG,UAAKC,EAAAA,GAAL,OAAuBJ,GAC1BK,IAAKJ,KAEP,mCAAWA,MACX,uCAAeC,OANRH,EADD,OAcnB,C,+LC9BDO,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,uBACvBV,EADuB,EACvBA,KADuB,kBAGxBA,EAAKY,SAHmB,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNL,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBI,EADpB,+CADM,uBACrBd,EADqB,EACrBA,KADqB,kBAKtBA,EAAKY,SALiB,2CAAH,sDAQfG,EAAY,mCAAG,WAAMvB,GAAN,yFACHiB,EAAAA,EAAAA,IAAA,gBACZjB,EADY,oBACOkB,EADP,oBADG,uBAClBV,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZF,EAAY,mCAAG,WAAMN,GAAN,yFACHiB,EAAAA,EAAAA,IAAA,gBACZjB,EADY,4BACekB,EADf,oBADG,uBAClBV,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAOZgB,EAAe,mCAAG,WAAMxB,GAAN,yFACNiB,EAAAA,EAAAA,IAAA,gBACZjB,EADY,4BACekB,EADf,oBADM,uBACrBV,EADqB,EACrBA,KADqB,kBAKtBA,EAAKY,SALiB,2CAAH,qD,sDClCrB,IAAML,EAAkB,kC","sources":["components/Cast/Cast.jsx","services/getMovies.js","utils/constants.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastMovie } from 'services/getMovies';\nimport { BASE_POSTER_URL } from 'utils/constants';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getCastMovie(movieId).then(data => setCast(data.cast));\n  }, [movieId]);\n\n  return (\n    <>\n      {\n        <ul>\n          {cast.map(({ id, profile_path, original_name, character }) => (\n            <li key={id}>\n              <img\n                src={`${BASE_POSTER_URL}${profile_path}`}\n                alt={original_name}\n              />\n              <p>Actor: {original_name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      }\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3373af60a4ee1fe7510a1a61c11380e1';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n","export const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","getCastMovie","then","data","map","id","profile_path","original_name","character","src","BASE_POSTER_URL","alt","axios","API_KEY","getTrendingMovies","results","getMovieByQuery","query","getMovieById","getReviewsMovie"],"sourceRoot":""}