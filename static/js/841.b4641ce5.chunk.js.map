{"version":3,"file":"static/js/841.b4641ce5.chunk.js","mappings":"+MAqDA,UAzCsB,WAAO,IAAD,IAClBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAIMC,EAAY,qBAHDC,EAAAA,EAAAA,MAGaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAM7C,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaV,GAASW,KAAKP,EAC5B,GAAE,CAACJ,KAGF,iCACE,SAAC,KAAD,CAAMY,GAAIP,EAAV,sBACA,4BACE,gBAAKQ,IAAG,UAAKC,EAAAA,GAAL,OAAuBX,EAAMY,aAAeC,IAAI,SACxD,wBAAKb,EAAMc,kBACX,uCACA,sCACA,uBAAId,EAAMe,YACV,oCACA,uBAAIf,EAAMgB,gBAGZ,oDACA,2BACE,yBACE,SAAC,KAAD,CAASP,GAAG,OAAZ,qBAEF,yBACE,SAAC,KAAD,CAASA,GAAG,UAAZ,4BAGJ,SAAC,EAAAQ,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C,+LCjDDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,uBACvBE,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBK,EADpB,+CADM,uBACrBH,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDAQfhB,EAAY,mCAAG,WAAMV,GAAN,yFACHsB,EAAAA,EAAAA,IAAA,gBACZtB,EADY,oBACOuB,EADP,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZI,EAAY,mCAAG,WAAM7B,GAAN,yFACHsB,EAAAA,EAAAA,IAAA,gBACZtB,EADY,4BACeuB,EADf,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAOZK,EAAe,mCAAG,WAAM9B,GAAN,yFACNsB,EAAAA,EAAAA,IAAA,gBACZtB,EADY,4BACeuB,EADf,oBADM,uBACrBE,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,qD,sDClCrB,IAAMZ,EAAkB,kC","sources":["pages/MoviesDetails/MoviesDetails.jsx","services/getMovies.js","utils/constants.js"],"sourcesContent":["import { Suspense, useEffect, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  // useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport { getMovieById } from 'services/getMovies';\nimport { BASE_POSTER_URL } from 'utils/constants';\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState('');\n  const location = useLocation();\n  // const navigate = useNavigate();\n\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    getMovieById(movieId).then(setMovie);\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkHref}>Go back</Link>\n      <div>\n        <img src={`${BASE_POSTER_URL}${movie.poster_path}`} alt=\"get\" />\n        <h2>{movie.original_title}</h2>\n        <p>User Score</p>\n        <h3>Overview</h3>\n        <p>{movie.overview}</p>\n        <h3>Genres</h3>\n        <p>{movie.genre_ids}</p>\n      </div>\n\n      <h2>Additional information</h2>\n      <ul>\n        <li>\n          <NavLink to=\"cast\">Cast</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"reviews\">rReviews</NavLink>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3373af60a4ee1fe7510a1a61c11380e1';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n","export const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\n"],"names":["movieId","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","getMovieById","then","to","src","BASE_POSTER_URL","poster_path","alt","original_title","overview","genre_ids","Suspense","fallback","axios","API_KEY","getTrendingMovies","data","results","getMovieByQuery","query","getCastMovie","getReviewsMovie"],"sourceRoot":""}